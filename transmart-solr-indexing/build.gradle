
dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile 'org.grails:grails-datastore-rest-client'
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile "org.grails.plugins:spring-security-core:${springSecurityPluginVersion}"

    compile "org.apache.solr:solr-solrj:4.5.1"

    runtime "org.postgresql:postgresql:${postgresqlVersion}"
    runtime "com.oracle:ojdbc7:${ojdb7Version}"

    compile project(':transmart-core-db')
    compile project(':biomart-domain')
    compile project(':folder-management-plugin')
}

assets {
    packagePlugin = true
}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
}

integrationTest.testLogging.exceptionFormat = 'full'