os: linux
language: groovy
jdk: openjdk8
php: 5.6
env:
  global:
    - TERM=dumb
    - PGCONFIG_PARAMS="PG_CONFIG=/usr/lib/postgresql/9.6/bin/pg_config"

addons:
  postgresql: '9.6'

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches
    - $HOME/.gradle/wrapper
    - $HOME/.m2
    - $HOME/pg

before_install:
  - GRADLE_VERSION=4.10.3
  - curl -f -L "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip" -o "gradle-${GRADLE_VERSION}-bin.zip"
  - unzip "gradle-${GRADLE_VERSION}-bin.zip"
  - GRADLE_HOME="$(pwd)/gradle-${GRADLE_VERSION}"
  - GRADLE_SCRIPT="${GRADLE_HOME}/bin/gradle"
  - $GRADLE_SCRIPT --version
  - groovy --version
  - sudo chmod a+rX $HOME
  - sudo apt-get -qq update
  - sudo apt-get install -y tk-dev html2text gnupg2
  - gpg2 --version
  - php --version
  - PWD=`pwd`
  - echo $PWD

install: true

jobs:
  include:
    - stage: test
      name: transmart-core-api
      env: DIR=transmart-core-api
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: transmart-core-db-tests
      env: DIR=transmart-core-db-tests
      before_script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT assemble
        - popd
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: transmart-rest-api
      env: DIR=transmart-rest-api
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: transmart-core-db on PostgreSQL 9.6
      env: DIR=transmart-core-db
      install:
        - pushd "$DIR"
        - $GRADLE_SCRIPT :transmart-data:createVars :transmart-data:setupPostgresTest
        - popd
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd
    - name: transmart-core-db on PostgreSQL 11
      env:
        - DIR=transmart-core-db
        - PGCONFIG_PARAMS="PG_CONFIG=/usr/lib/postgresql/11/bin/pg_config"
        - PGVERSION=11
        - PGPORT=5433
      addons:
        postgresql: "11"
      install:
        - sudo apt-get --yes remove postgresql-9.2
        - sudo apt-get --yes install postgresql-server-dev-11 postgresql-11 postgresql-client-11
        - sudo -u postgres psql -c 'CREATE ROLE travis SUPERUSER LOGIN CREATEDB;'
        - pushd "$DIR"
        - $GRADLE_SCRIPT :transmart-data:createVars :transmart-data:setupPostgresTest
        - popd
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: transmart-api-server
      env: DIR=transmart-api-server
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: transmart-copy on PostgreSQL 9.6
      env: DIR=transmart-copy
      install:
        - pushd "$DIR"
        - $GRADLE_SCRIPT :prepareTestDatabase
        - popd
      before_script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT shadowJar
        - popd
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd
    - name: transmart-copy on PostgreSQL 11
      env:
        - DIR=transmart-copy
        - PGPORT=5433
      addons:
        postgresql: "11"
      install:
        - sudo apt-get --yes remove postgresql-9.2
        - sudo apt-get --yes install postgresql-11 postgresql-client-11
        - pushd "$DIR"
        - $GRADLE_SCRIPT :prepareTestDatabase
        - popd
      before_script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT shadowJar
        - popd
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: transmart-schemas
      env: DIR=transmart-schemas
      before_script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT assemble
        - popd
      script:
        - pushd "$DIR"
        - $GRADLE_SCRIPT check
        - popd

    - name: Test publish task
      script: $GRADLE_SCRIPT publishToMavenLocal

    - stage: deploy
      if: branch in (dev, master) and type != pull_request
      name: Publish to Nexus and Docker Hub
      script: skip
      # For deployment to Nexus, configure the `NEXUS_USERNAME` and `NEXUS_PASSWORD` variables:
      # - `travis env set NEXUS_USERNAME ...`
      # - `travis env set NEXUS_PASSWORD ...`
      deploy:
        - provider: script
          skip_cleanup: true
          script: "cp .travis/settings.xml $HOME/.m2/settings.xml && $GRADLE_SCRIPT publish"
          on:
            all_branches: true

      # For deployment to Docker Hub, configure the `DOCKER_USERNAME` and `DOCKER_PASSWORD` variables:
      # - `travis env set DOCKER_USERNAME ...`
      # - `travis env set DOCKER_PASSWORD ...` (create a new access token for this purpose)
      # For the notification, configure `SLACK_WEBHOOK`
      # - `travis env set SLACK_WEBHOOK "https://hooks.slack.com/services/..."`
      after_deploy:
        - export GRADLE_SCRIPT=$GRADLE_SCRIPT
        - travis_retry ./.travis/docker_release.sh
        - ./.travis/notify.sh

after_success:
  - echo "Writing summary..."
  - ([ -d "$DIR/build/reports/tests" ]) && html2text $DIR/build/reports/tests/index.html

after_failure:
  - echo "Writing error logs..."
  - for f in "$DIR"/hs_err_*.log; do echo "$f"; cat "$f"; done
  - echo "Writing reports..."
  - html2text "$DIR/build/reports/tests/index.html"
  - for f in "$DIR"/build/reports/tests/classes/*.html; do echo "$f"; html2text "$f"; done
  - ([ -d "$DIR/build/reports/tests/functionalTest" ]) && (html2text "$DIR/build/reports/tests/functionalTest/index.html")
  - ([ -d "$DIR/build/reports/tests/functionalTest" ]) && (for f in "$DIR"/build/reports/tests/functionalTest/classes/*.html; do echo "$f"; html2text "$f"; done)
  - ([ -d "$DIR/build/reports/tests/integrationTest" ]) && (html2text "$DIR/build/reports/tests/integrationTest/index.html")
  - ([ -d "$DIR/build/reports/tests/integrationTest" ]) && (for f in "$DIR"/build/reports/tests/integrationTest/classes/*.html; do echo "$f"; html2text "$f"; done)
