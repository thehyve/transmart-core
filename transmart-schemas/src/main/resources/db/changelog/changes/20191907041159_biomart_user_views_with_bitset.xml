<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<!--
  ~ Copyright (c) 2019  The Hyve B.V.
  ~  This file is distributed under the GNU General Public License
  ~  (see accompanying file LICENSE).
  -->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">
    <preConditions onFail="WARN">
        <dbms type="PostgreSQL" />
        <sqlCheck expectedResult="1">
            SELECT count(*) FROM pg_available_extensions WHERE name='pg_bitcount'
        </sqlCheck>
    </preConditions>
    <changeSet author="artur@thehyve.nl" id="20191907041159-0">
        <createView fullDefinition="false" viewName="patient_num_boundaries"> SELECT min(patient_dimension.patient_num) AS min_patient_num,
    max(patient_dimension.patient_num) AS max_patient_num,
    ((max(patient_dimension.patient_num) - min(patient_dimension.patient_num)) + (1)::numeric) AS diameter
   FROM i2b2demodata.patient_dimension;</createView>
    </changeSet>
    <changeSet author="artur@thehyve.nl" id="20191907041159-1">
        <comment>
            Materialized views are not supported yet by liquibase
        </comment>
        <sql endDelimiter=";">
            CREATE MATERIALIZED VIEW study_concept_bitset
            TABLESPACE pg_default
            AS
             SELECT s.study_id,
                o.concept_cd,
                pg_int_to_bit_agg((o.patient_num - patient_num_boundaries.min_patient_num)::integer, patient_num_boundaries.diameter::integer) AS patient_set_bits
               FROM patient_num_boundaries,
                i2b2demodata.observation_fact o
                 JOIN i2b2demodata.trial_visit_dimension tv ON o.trial_visit_num = tv.trial_visit_num
                 JOIN i2b2demodata.study s ON s.study_num = tv.study_num
              WHERE o.modifier_cd::text = '@'::text
              GROUP BY s.study_id, o.concept_cd
            WITH DATA
        </sql>
    </changeSet>
    <changeSet author="artur@thehyve.nl" id="20191907041159-2">
        <createView fullDefinition="false" viewName="patient_set_bitset"> SELECT qri.result_instance_id,
    public.pg_int_to_bit_agg(((collection.patient_num - patient_num_boundaries.min_patient_num))::integer, (patient_num_boundaries.diameter)::integer) AS patient_set
   FROM patient_num_boundaries,
    (i2b2demodata.qt_query_result_instance qri
     LEFT JOIN i2b2demodata.qt_patient_set_collection collection ON ((collection.result_instance_id = qri.result_instance_id)))
  GROUP BY qri.result_instance_id;</createView>
    </changeSet>
    <changeSet author="artur@thehyve.nl" id="20191907041159-3">
        <createView fullDefinition="false" viewName="study_concept_patient_set_bitset"> SELECT psb.result_instance_id,
    scs.study_id,
    scs.concept_cd,
    public.pg_bitcount((scs.patient_set_bits &amp; psb.patient_set)) AS patient_count
   FROM study_concept_bitset scs,
    patient_set_bitset psb;</createView>
    </changeSet>
    <changeSet author="artur@thehyve.nl" id="20191907041159-4">
        <createView fullDefinition="false" viewName="concept_patient_set_bitset"> WITH concept_bitset AS (
         SELECT study_concept_bitset.concept_cd,
            bit_or(study_concept_bitset.patient_set_bits) AS patient_set_bits
           FROM study_concept_bitset
          GROUP BY study_concept_bitset.concept_cd
        )
 SELECT psb.result_instance_id,
    cb.concept_cd,
    public.pg_bitcount((cb.patient_set_bits &amp; psb.patient_set)) AS patient_count
   FROM concept_bitset cb,
    patient_set_bitset psb;</createView>
    </changeSet>
    <changeSet author="artur@thehyve.nl" id="20191907041159-5">
        <createView fullDefinition="false" viewName="study_patient_set_bitset"> WITH study_bitset AS (
         SELECT study_concept_bitset.study_id,
            bit_or(study_concept_bitset.patient_set_bits) AS patient_set_bits
           FROM study_concept_bitset
          GROUP BY study_concept_bitset.study_id
        )
 SELECT psb.result_instance_id,
    sb.study_id,
    public.pg_bitcount((sb.patient_set_bits &amp; psb.patient_set)) AS patient_count
   FROM study_bitset sb,
    patient_set_bitset psb;</createView>
    </changeSet>
</databaseChangeLog>
